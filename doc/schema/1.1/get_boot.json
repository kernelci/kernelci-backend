{
    "$schema": "http://api.kernelci.org/json-schema/1.1/get_boot.json",
    "id": "http://api.kernelci.org/json-schema/1.1/get_boot.json",
    "title": "boot",
    "description": "A boot report object",
    "type": "object",
    "properties": {
        "_id": {
            "type": "object",
            "description": "The ID of ths object",
            "properties": {
                "$oid": {
                    "type": "string",
                    "description": "The actual ID value"
                }
            }
        },
        "created_on": {
            "type": "object",
            "description": "Creation date of the object",
            "properties": {
                "$date": {
                    "type": "number",
                    "description": "Milliseconds from epoch time",
                    "format": "utc-millisec"
                }
            }
        },
        "board": {
            "type": "string",
            "description": "The name of the board"
        },
        "board_instance": {
            "type": "string",
            "description": "The instance identifier for the board"
        },
        "device_type": {
            "type": "string",
            "description": "The device type associated with the board"
        },
        "job": {
            "type": "string",
            "description": "The job associated with this object"
        },
        "job_id": {
            "type": "object",
            "description": "The ID of the associated job",
            "properties": {
                "$oid": {
                    "type": "string",
                    "description": "The actual ID value"
                }
            }
        },
        "kernel": {
            "type": "string",
            "description": "The kernel associated with this object"
        },
        "defconfig": {
            "type": "string",
            "description": "The name of the defconfig as reported by the CI loop"
        },
        "defconfig_full": {
            "type": "string",
            "description": "The full name of the defconfig, can contain also config fragments information",
            "default": "The defconfig value"
        },
        "build_id": {
            "type": "object",
            "description": "The ID of the associated build report",
            "properties": {
                "$oid": {
                    "type": "string",
                    "description": "The actual ID value"
                }
            }
        },
        "arch" : {
            "type": "string",
            "description": "The architecture type of this board",
            "enum": ["arm", "arm64", "mips", "x86"]
        },
        "git_branch": {
            "type": "string",
            "description": "The branch used for boot testing"
        },
        "git_commit": {
            "type": "string",
            "description": "The git SHA of the commit used for boot testing"
        },
        "git_describe": {
            "type": "string",
            "description": "The name of the git describe command"
        },
        "lab_name": {
            "type": "string",
            "description": "The name of the lab that is doing the boot tests"
        },
        "time": {
            "type": "object",
            "description": "Time taken to boot the board",
            "properties": {
                "$date": {
                    "type": "number",
                    "description": "Milliseconds from epoch time",
                    "format": "utc-millisec"
                }
            }
        },
        "status": {
            "type": "string",
            "description": "The status of the boot report",
            "enum": ["FAIL", "OFFLINE", "PASS", "UNTRIED"]
        },
        "warnings": {
            "type": "number",
            "description": "Number of warnings in the boot phase"
        },
        "boot_log": {
            "type": "string",
            "description": "Name of the boot log text file"
        },
        "boot_log_html": {
            "type": "string",
            "description": "Name of the boot log HTML file"
        },
        "initrd_addr": {
            "type": "string",
            "description": "Initrd address used"
        },
        "initrd": {
            "type": "string",
            "description": "Initrd path"
        },
        "load_addr": {
            "type": "string",
            "description": "Load address used"
        },
        "kernel_image": {
            "type": "string",
            "description": "The kernel image used to boot"
        },
        "kernel_image_size": {
            "type": "integer",
            "description": "Size in bytes of the kernel image file"
        },
        "dtb_addr": {
            "type": "string",
            "description": "The DTB address used"
        },
        "dtb": {
            "type": "string",
            "description": "The DTB file or directory used"
        },
        "endian": {
            "type": "string",
            "description": "Endianness of the board"
        },
        "fastboot": {
            "type": "boolean",
            "description": "If it was a fastboot"
        },
        "fastboot_cmd": {
            "type": "string",
            "description": "The fastboot command used"
        },
        "boot_result_description": {
            "type": "string",
            "description": "The description of the boot result, useful to provide a cause of a failure"
        },
        "retries": {
            "type": "integer",
            "description": "The number of boot retries that have been performed",
            "default": 0
        },
        "version": {
            "type": "string",
            "description": "The version of this JSON schema: depends on the POST request"
        },
        "file_server_url": {
            "type": "string",
            "description": "The URL where boot log files, or other related files, are stored"
        },
        "file_server_resource": {
            "type": "string",
            "description": "The server path where the boot related files are stored"
        },
        "mach": {
            "type": "string",
            "description": "The machine (SoC) family"
        },
        "metadata": {
            "type": "object",
            "description": "A free form object that can contain different properties"
        },
        "uimage": {
            "type": "string",
            "description": "Path to the uImage used"
        },
        "uimage_addr": {
            "type": "string",
            "description": "uImage load address"
        },
        "qemu": {
            "type": "string",
            "description": "qemu binary used"
        },
        "qemu_command": {
            "type": "string",
            "description": "Full command line used to start qemu"
        },
        "filesystem": {
            "type": "string",
            "description": "Type of filesystem used"
        },
        "chainloader": {
            "type": "string",
            "description": "Description of the chainloader used, if any"
        },
        "bootloader": {
            "type": "string",
            "description": "The name of the bootloader used"
        },
        "bootloader_version": {
            "type": "string",
            "description": "The version of the bootloader used"
        },
        "boot_job_url": {
            "type": "string",
            "description": "The URL of the boot test executor; this should include the schema and authority parts of the URI"
        },
        "boot_job_path": {
            "type": "string",
            "description": "The path where the boot test job can be found; this should be the path part of the URI"
        },
        "boot_job_id": {
            "type": "string",
            "description": "The ID of the job that ran the boot test as reported by the boot test executor"
        },
        "compiler": {
            "type": "string",
            "description": "The name of the compiler used"
        },
        "compiler_version": {
            "type": "string",
            "description": "The version of the compiler used"
        },
        "compiler_version_ext": {
            "type": "string",
            "description": "Concatenation of compiler and compiler_version"
        },
        "compiler_version_full": {
            "type": "string",
            "description": "Full string of the compiler used (compiler, version, vendor numbering, ...)"
        }
    }
}
