---
- name: Create celery log directory
  file: path=/var/log/celery
        state=directory
        owner={{ app_user }}
        group={{ app_user }}
        mode=0755
  tags:
    - install
    - app

- name: Checkout kernel-ci-backend code
  git:  repo=https://github.com/kernelci/kernelci-backend.git
        dest={{ install_base }}/{{ hostname }}
        version={{ git_head }}
        update=yes
  notify:
    - restart-kernel-ci-backend
    - restart-celery
  tags:
    - install
    - app

- name: Fix cloned repo permissions
  file: path={{ install_base }}/{{ hostname }}
        state=directory
        recurse=yes
        owner={{ app_user }}
        group={{ app_user }}
  tags:
    - install
    - app

- name: Install pip requirements
  pip:  requirements={{ install_base }}/{{ hostname }}/requirements.txt
        virtualenv={{ install_base }}/.venv/{{ hostname }}
        extra_args="--upgrade"
  notify:
    - restart-kernel-ci-backend
    - restart-celery
  tags:
    - install
    - app

- name: Fix virtualenv permissions
  file: path={{ install_base }}/.venv/{{ hostname }}
        state=directory
        recurse=yes
        owner={{ app_user }}
        group={{ app_user }}
  tags:
    - install
    - app

- name: Does /etc/kernelci/{{ kci_app_name }} exist?
  file: path=/etc/kernelci/{{ kci_app_name }}
        state=directory
        owner=root
        group=root
        mode=0755
  tags:
    - install
    - app

- name: Install configuration file
  template: src=kernelci-backend.cfg
            dest=/etc/kernelci/{{ kci_app_name }}/kernelci-backend.cfg
            owner=root
            group=root
            mode=0644
  tags:
    - install
    - app
    - secrets

- name: Install celery configuration file
  template: src=kernelci-celery.cfg
            dest=/etc/kernelci/{{ kci_app_name }}/kernelci-celery.cfg
            owner=root
            group=root
            mode=0644
  tags:
    - install
    - app
    - secrets

- name: Copy build docs script
  template: src=build-docs.sh
            dest=/tmp/build-docs.sh
            owner=root
            group=root
            mode=755
  tags:
    - install
    - app
    - docs

- name: Build docs
  shell:  ./build-docs.sh
          chdir=/tmp
  tags:
    - install
    - app
    - docs

- include: selinux.yml
  when: ansible_selinux is defined and ansible_selinux.status == 'enabled'
